package LessonByGpt;

import lombok.Getter;

@Getter
public class BankAccount {
    private double balance; // Lombok –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –≥–µ—Ç—Ç–µ—Ä

    public BankAccount(double balance) {
        if (balance < 0) throw new IllegalArgumentException("–ë–∞–ª–∞–Ω—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º");
        this.balance = balance;
    }

    public void deposit(double amount) {
        if (amount <= 0) throw new IllegalArgumentException("–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π");
        balance += amount;
        System.out.println("üí∞ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: +" + amount + " USD. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: " + balance);
    }

    public void withdraw(double amount) {
        if (amount <= 0) throw new IllegalArgumentException("–°—É–º–º–∞ —Å–Ω—è—Ç–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π");
        if (amount > balance) {
            System.out.println("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!");
            return;
        }
        balance -= amount;
        System.out.println("üí∏ –°–Ω—è—Ç–∏–µ: -" + amount + " USD. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: " + balance);
    }
}
